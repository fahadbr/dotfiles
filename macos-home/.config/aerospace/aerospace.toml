# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=8.0',
  #'exec-and-forget sketchybar'
]

# Notify Sketchybar about workspace change
exec-on-workspace-change = ['/bin/bash', '-c', '$HOME/.config/aerospace/on_workspace_change.sh $AEROSPACE_FOCUSED_WORKSPACE $AEROSPACE_PREV_WORKSPACE'
]

# Start AeroSpace at login
start-at-login = false

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = false

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 25

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = true

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 15
inner.vertical =   15
outer.left =       15
outer.bottom =     15
# outer.top =        [{monitor."Built-in Retina Display" = 30}, 60] # config with sketchybar
#outer.top =        [{monitor."Built-in Retina Display" = 15}, 40]
outer.top =        15
outer.right =      15

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus --boundaries all-monitors-outer-frame left'
alt-j = 'focus --boundaries all-monitors-outer-frame down'
alt-k = 'focus --boundaries all-monitors-outer-frame up'
alt-l = 'focus --boundaries all-monitors-outer-frame right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

cmd-alt-ctrl-h = ['join-with left', 'layout v_accordion']
cmd-alt-ctrl-j = ['join-with down', 'layout h_accordion']
cmd-alt-ctrl-k = ['join-with up', 'layout h_accordion']
cmd-alt-ctrl-l = ['join-with right', 'layout v_accordion']

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = 'workspace --auto-back-and-forth 1'
alt-2 = 'workspace --auto-back-and-forth 2'
alt-3 = 'workspace --auto-back-and-forth 3'
alt-4 = 'workspace --auto-back-and-forth 4'
alt-5 = 'workspace --auto-back-and-forth 5'
alt-6 = 'workspace --auto-back-and-forth 6'
alt-7 = 'workspace --auto-back-and-forth 7'
alt-8 = 'workspace --auto-back-and-forth 8'
alt-9 = 'workspace --auto-back-and-forth 9'
#alt-minus = 'workspace --auto-back-and-forth scratch'
alt-n = 'workspace --wrap-around next'
alt-p = 'workspace --wrap-around prev'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-1 = 'move-node-to-workspace --focus-follows-window 1'
alt-shift-2 = 'move-node-to-workspace --focus-follows-window 2'
alt-shift-3 = 'move-node-to-workspace --focus-follows-window 3'
alt-shift-4 = 'move-node-to-workspace --focus-follows-window 4'
alt-shift-5 = 'move-node-to-workspace --focus-follows-window 5'
alt-shift-6 = 'move-node-to-workspace --focus-follows-window 6'
alt-shift-7 = 'move-node-to-workspace --focus-follows-window 7'
alt-shift-8 = 'move-node-to-workspace --focus-follows-window 8'
alt-shift-9 = 'move-node-to-workspace --focus-follows-window 9'
alt-shift-minus = 'move-node-to-workspace scratch'

alt-shift-left = 'move-workspace-to-monitor prev'
alt-shift-right = 'move-workspace-to-monitor next'

alt-shift-f = 'fullscreen --no-outer-gaps'
# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
#alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
#alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

alt-shift-space = 'layout floating tiling'
#alt-h = 'split horizontal'
#alt-v = 'split vertical'

alt-s = 'layout v_accordion' # 'layout stacking' in i3
alt-t = 'layout h_accordion' # 'layout tabbed' in i3
alt-e = 'layout tiles horizontal vertical' # 'layout toggle split' in i3

alt-enter = 'exec-and-forget kitten @ action new_os_window'
alt-shift-w = 'exec-and-forget aerospace focus --window-id $(aerospace list-windows --monitor all --format "%{workspace}[%{monitor-id}]%{right-padding} | %{app-name}%{right-padding} | %{window-title}%{right-padding} | %{window-id}" | choose | cut -d "|" -f 4)'
alt-shift-r = 'reload-config'
#alt-shift-r = 'exec-and-forget sketchybar --reload'


# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-r = 'mode resize'
alt-a = 'mode apps'

[mode.resize.binding]
l = 'resize width +100'
k = 'resize height +100'
j = 'resize height -100'
h = 'resize width -100'
shift-r = ['exec-and-forget $HOME/.config/aerospace/flatten_reset.sh', 'mode main']
esc = 'mode main'
enter = 'mode main'
alt-r = 'mode main'


[mode.apps.binding]
alt-b = ['exec-and-forget $HOME/.config/aerospace/focus.sh browser', 'mode main']
alt-c = ['exec-and-forget $HOME/.config/aerospace/focus.sh calendar', 'mode main']
alt-f = ['exec-and-forget $HOME/.config/aerospace/focus.sh bbfunction', 'mode main']
alt-i = ['exec-and-forget $HOME/.config/aerospace/focus.sh message', 'mode main']
alt-m = ['exec-and-forget $HOME/.config/aerospace/focus.sh mail', 'mode main']
alt-n = ['exec-and-forget $HOME/.config/aerospace/focus.sh notes', 'mode main']
alt-t = ['exec-and-forget $HOME/.config/aerospace/focus.sh terminal', 'mode main']
alt-w = ['exec-and-forget $HOME/.config/aerospace/scratch.sh net.whatsapp.WhatsApp WhatsApp', 'mode main']
alt-x = ['exec-and-forget $HOME/.config/aerospace/focus.sh todo', 'mode main']
alt-z = ['exec-and-forget open -a "zoom.us"', 'mode main']
esc = 'mode main'
enter = 'mode main'
alt-a = 'mode main'

[[on-window-detected]]
if.app-name-regex-substring = 'Messages|TickTick|Notes|WhatsApp|Finder|ChatGPT|Obsidian|Bitwarden|Calendar|Parallels|BetterTouchTool|Karabiner|Hammerspoon|Citrix Viewer'
run = ['layout floating']  # The callback itself

[[on-window-detected]]
if.app-name-regex-substring = 'Firefox|Safari|Chrome|qutebrowser'
check-further-callbacks = false
run = ['move-node-to-workspace 2']  # The callback itself

[[on-window-detected]]
if.app-name-regex-substring = 'kitty|Ghostty|Terminal'
check-further-callbacks = false
run = ['move-node-to-workspace 3']  # The callback itself

[[on-window-detected]]
if.app-name-regex-substring = 'Zoom'
check-further-callbacks = false
run = ['move-node-to-workspace 4']  # The callback itself

[[on-window-detected]]
if.app-name-regex-substring = 'Citrix Viewer'
if.window-title-regex-substring = 'Launchpad'
check-further-callbacks = false
run = ['move-node-to-workspace scratch']  # The callback itself

[[on-window-detected]]
if.app-name-regex-substring = 'Citrix Viewer'
if.window-title-regex-substring = 'IB|MSG'
check-further-callbacks = false
run = ['layout tiling', 'move-node-to-workspace 1']  # The callback itself

[[on-window-detected]]
if.app-name-regex-substring = 'Citrix Viewer'
if.window-title-regex-substring = 'APPT|APPX|New Tab|DRQS|PRQS|BBTF|ZOMO'
check-further-callbacks = false
run = ['layout tiling', 'move-node-to-workspace 5']  # The callback itself


